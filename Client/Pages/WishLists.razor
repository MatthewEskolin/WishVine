@page "/wishlist"
@using WishVine.Shared
@using MudBlazor
@using MudBlazor.Extensions


@inject HttpClient Http


<h3>WishLists</h3>

@if (_wishlists == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @:Table 1 Monitor
    <br />
    if(_selectedRow != null){ 
        @: you have selected @_selectedRow.Name
    }



    <MudTable Items="@_wishlists" SelectOnRowClick="true" SelectedItemChanged="EventCallback.Factory.Create<WishListDTO>(this,HandleTrailSelected)">
        <HeaderContent>

            <MudTh>List Name</MudTh>
            <MudTh>User Name</MudTh>
            <MudTh>Details</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTr>
                <MudTd>@context.Name</MudTd>
                <MudTd>list property 2</MudTd>
                <MudTd>list property 3</MudTd>
            </MudTr>
        </RowTemplate>
    </MudTable>

    <!-- Bind Example -->
@*    <MudTable T="WishList" @ref="mudTable" Items="_wishlists" RowStyleFunc="@SelectedRowStyleFunc" 
          @bind-SelectedItem="_selectedRow2">
        <HeaderContent>
            <MudTh>List Name</MudTh>
            <MudTh>User Name</MudTh>
            <MudTh>Details</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTr>
                <MudTd>@context.Name</MudTd>
                <MudTd>list property 2</MudTd>
                <MudTd>list property 3</MudTd>
            </MudTr>
        </RowTemplate>
    </MudTable>

    @:Table 2 Monitor <br />
    if (_selectedRow2 != null)
    {
        @: you have selected @_selectedRow2.Name
    }*@

}

@code {


    //EXAMPLE 2
    private MudTable<WishListDTO> mudTable;
    private WishListDTO? _selectedRow2;
    private string SelectedRowStyleFunc(WishListDTO wl, int rowNumber)
    {
        if (mudTable.SelectedItem != null && mudTable.SelectedItem.Equals(wl))
        {
            return "background-color: lightgrey";
        }
        return string.Empty;
    }



    //query wish lists for API
    private WishListDTO[]? _wishlists;

    private WishListDTO? _selectedRow;


    protected override async Task OnInitializedAsync()
    {
        _wishlists ??= await Http.GetFromJsonAsync<WishListDTO[]>("WishList");
    }

    private void HandleTrailSelected(WishListDTO list) => _selectedRow = list;

    //private Task Selected2()
    //{

        
    //}

}
